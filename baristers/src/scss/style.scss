@use "sass:math";
:root {
  //? colors
  --dark-clr: #1b1b1b;
  --dark-secondary-clr: #111111;
  --grey-light: #fbfbfb;
  --grey-lighter: #f9f8f8;
  --grey-light-secondary: #f5f5f5;
}

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин

// Подключить если есть локальные файлы шрифтов
@import "fonts/fonts";
@import "fonts/icons";

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
//@import "fonts/icons";

// ============================================================================================================================================================================================================================================================================================================================================================================================
// Настройки шаблона ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: ProximaNova;
$fontSize: rem(16); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: #000; // Цвет шрифта по умолчанию

// Настройки адаптивной сетки ===============================================================================================================================================================================================================================================================================================

// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 100%;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 180;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em(
  $containerWidth
); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Обнуление ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

// Стили тега BODY ============================================================================================================================================================================================================================================================================================================================================================================================
html.lock {
  overflow: hidden;
  touch-action: none;
  overscroll-behavior: none;
  body {
    overflow: hidden;
    touch-action: none;
    overscroll-behavior: none;
  }
}

body {
  // Скролл заблокирован
  overflow: hidden;
  .lock & {
    overflow: hidden;
    touch-action: none;
    overscroll-behavior: none;
  }
  // Сайт загружен
  .loaded & {
    .preloader {
      opacity: 0;
      transform: translateY(-100%);
    }
  }
}

.loaded {
  body {
    overflow: auto;
  }
  .hero {
    .hero-caption__inner {
      opacity: 1;
      transform: translateX(0);
      filter: blur(0);
      transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    }
    .hero-bg {
      animation: heroImgAnim 1s 0.5s cubic-bezier(0.4, 0, 0.2, 1) both;
    }
  }
  [data-fade-in] {
    opacity: 0;
    transform: translateX(-50px);
    filter: blur(5px);
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  [data-fade-in]._active {
    opacity: 1;
    transform: translateX(0);
    filter: blur(0);
  }
}

// Оболочка wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  position: relative;
  // Прижимаем footer
  > main {
    flex: 1 1 auto;
  }
  // Фикс для слайдеров
  > * {
    min-width: 0;
  }
}
// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {
  // Отзывчивая
  [class*="__container"] {
    @if ($maxWidthContainer>0) {
      max-width: $maxWidthContainer;
      box-sizing: content-box;
      margin: 0 auto;
    }
    @if ($containerPadding>0) {
      @if ($maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      } @else {
        @include adaptiveValue(
          "padding-left",
          math.div($containerPadding, 2),
          15
        );
        @include adaptiveValue(
          "padding-right",
          math.div($containerPadding, 2),
          15
        );
      }
    }
  }
} @else {
  // По брейк-поинтам
  [class*="__container"] {
    margin: 0 auto;
    @if ($maxWidthContainer>0) {
      max-width: $maxWidthContainer;
      box-sizing: content-box;
    } @else {
      @if ($containerPadding>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
    @media (max-width: $pc) {
      max-width: rem(970);
    }
    @media (max-width: $tablet) {
      max-width: rem(750);
    }
    @media (max-width: $mobile) {
      max-width: none;
      @if ($containerPadding>0 and $maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
  }
}

[class*="__container"] {
  @media (max-width: 1024px) {
    padding-left: 42px;
    padding-right: 42px;
  }
  @media (max-width: 768px) {
    padding-left: 17px;
    padding-right: 17px;
  }
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";
@import "base/forms/input";
@import "base/popup";

// Подключение стилей общих элементов проекта
@import "common";
@import "buttons";
@import "socials";
@import "accordion";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";

// Подключение стилей отдельных страниц
@import "home";
@import "hero";
@import "about-home";
@import "achievements";
@import "clients";
@import "services";
@import "team";
@import "products-slider";
@import "news";
@import "contacts";
@import "form";
@import "preloader";
@import "about-us";
@import "inner-services";
@import "news-page";
@import "cart";
@import "product-single";
